source('~/R/Project1/code.r')
2 + 2
dat <- read.csv("femaleMiceWeights.csv")
dat
dat(2)
dat[3]
dat[,3]
dat[3,]
library(downloader)
install.package("downloader")
install.packages("downloader")
dat
dat[12,2]
$dat[,2]
typeof(dat)
dat
dat$Bodyweight
dat$Bodyweight[11]
length(dat$Bodyweight)
dat$Bodyweight[1:13]
dat$Bodyweight[13:24]
mean(dat$Bodyweight[13:24])
?sample
sample(13:24, 1)
sample(13:24, 1)
sample(13:24, 1)
sample(13:24, 1)
sample(13:24, 1)
dat$Bodyweight[sample(13:24, 1)]
set.seed(1)
dat$Bodyweight[sample(13:24, 1)]
dat$Bodyweight[sample(13:24, 1)]
dat$Bodyweight[sample(13:24, 1)]
exit
q()
set.seed(1)
dat$Bodyweight[sample(13:24, 1)]
sample(13:14, 1)
sample(13:14, 1)
sample(13:14, 1)
sample(13:14, 1)
sample(13:14, 1)
sample(13:14, 1)
dat$Bodyweight[sample(13:24, 1)]
set.seed(1)
dat$Bodyweight[sample(13:24, 1)]
install.packages("dplyr")
library("dplyr")
View(dat)
View(controls)
View(controls)
controls
View(controls)
controls
controls <- filter(dat, Diet=="chow")
controls
View(controls)
select(conterols, Bodyweight)
select(controls, Bodyweight)
unlist(controls)
source('~/R/Project1/code.R')
source('~/R/Project1/code.R')
controls
source('~/R/Project1/code.R')
source('~/R/Project1/code.R')
controls
mean(controls)
class(dat)
controls <- filter(dat, Diet=="chow")
library(downloader)
url="https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/msleep_ggplot2.csv"
filename <- basename(url)
download(url,filename)
msleep = read.csv(msleep_ggplot2.csv); class(msleep)
msleep <- read.csv(msleep_ggplot2.csv); class(msleep)
msleep <- read.csv(msleep_ggplot2.csv)
msleep <- read.csv("msleep_ggplot2.csv"); class(msleep)
msleep
source('~/R/Project1/3rdEx.R')
source('~/R/Project1/3rdEx.R')
nrow(filteredDat)
filteredDat
class(filteredDat)
select(filteredDat, sleep_total)
class(select(filteredDat, sleep_total))
source('~/R/Project1/code.R')
meanSleep
source('~/R/Project1/code.R')
source('~/R/Project1/3rdEx.R')
source('~/R/Project1/3rdEx.R')
meanSleep2
summarize(filteredDat)
filteredDat
summarize(filteredDat)
filteredDat
q()
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,5)
averages5[i] <- mean(X)
}
# make averages50
set.seed(1)
n <- 1000
averages50 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,50)
averages50[i] <- mean(X)
}
hist(averages5)
hist(averages50)
par(mfrow=c(2))
par(mfrow=c(2, 1))
hist(averages5)
hist(averages50)
mean(abs(average5) >= 23) + mean(average5 <= 25)
mean(abs(averages5) >= 23) + mean(averages5 <= 25)
mean(abs(averages5) >= 23) - mean(averages5 <= 25)
mean(abs(averages5) <= 25) - mean(averages5 >= 23)
mean(abs(averages50) <= 25) - mean(averages50 >= 23)
mean(abs(averages50) < 25) - mean(averages50 > 23)
mean(abs(averages50) < 25)
mean(abs(averages50) > 23)
mean(averages50 > 23)
mean(averages50 < 25)
mean(23 <= averages50 <= 25)
averages50 < 25
sum(averages50 < 25)/length(averages50)
sum(averages50 < 25)/length(averages50)
averages50 > 23
sum(averages50 > 23)/length(averages50)
0.988-0.006
sum(averages50 > 23)/length(averages50) + (1-sum(averages50 < 25)/length(averages50))
sum(averages50 < 25)/length(averages50)
1-sum(averages50 < 25)/length(averages50)
pnorm(25,23.9,0.43)
pnorm(25,23.9,0.43)-pnorm(23, 23.9, 0.43)
source('~/R/Project1/Lec1Wk2.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
controls
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
install.packages("rafalib")
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
set.seed(1)
mean(sample(x, 25))
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
set.seed(1)
average(sample(y, 25))
set.seed(1)
mean(sample(y, 25))
set.seed(1); mean(sample(y, 25))-mean(sample(x, 25))
mean(y)-mean(x)
4.014-ans
set.seed(1); mean(sample(y, 25))-mean(sample(x, 25))-(mean(y)-mean(x))
35.8036-34.84793
ans-mean(y)+mean(x)
35.8036-34.84793-mean(y)+mean(x)
30.5196-34.84793-mean(y)+mean(x)
30.5196-35.8036-mean(y)+mean(x)
abs(30.5196-35.8036)-mean(y)+mean(x)
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
Ybar
Xbar
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
pnorm(-1)
pnorm(1)-pnorm(-1)
pnorm(2)-pnorm(-2)
pnorm(3)-pnorm(-3)
?pnorm
pnorm(1, mean=mean(x), sd=popsd(x))
pnorm(mean(x)+popsd(x), mean=mean(x), sd=popsd(x))
pnorm(mean(x)+popsd(x), mean=mean(x), sd=popsd(x))-pnorm(mean(x)-popsd(x), mean=mean(x), sd=popsd(x))
mean(x > mean(x) + popsd(x))
mean(x < mean(x) - popsd(x))
(1-mean(x < mean(x) - popsd(x)))+(1-mean(x > mean(x) + popsd(x)))
(1-mean(x < mean(x) - popsd(x))-mean(x > mean(x) + popsd(x)))
(1-mean(x < mean(x) - 2*popsd(x))-mean(x > mean(x) + 2*popsd(x)))
(1-mean(x < mean(x) - 3*popsd(x))-mean(x > mean(x) + 3*popsd(x)))
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
set.seed(1)
avgs <- replicate(10000, mean( sample(y, 25)))
mypar(1,2)
hist(avgs)
qqnorm(avgs)
qqline(avgs)
avgs
mean(y)
popsd(y)/sqrt(5)
popsd(y)/sqrt(1000)
popsd(y)
popsd(y)/sqrt(5000)
popsd(avgs)
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
source('~/R/Project1/PopulationSamplesandEstimatesExercises.R')
tstat
ybar
xbar
sd
yst
ysd
xsd
t.test(x, y)
t.test(y, x)
max(y)
mean(y)
mean(x)
?replicate
avgs <- replicate(1000, (mean(x==6)-p)/sqrt(p*q/n))
q <- 1-1/6
avgs
x
n <- 10000
avgs
exit
.exit
q()
